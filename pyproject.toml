[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core>=2.0.0"]

[project]
name = "comics-scraper"
description = ""
version = "0.0.0"
readme = "README.md"
authors = [
    { name = "Lucas Serra", email = "Lucas Serra <lpraxedes94@gmail.com>" },
]
license = "Proprietary"
requires-python = "~=3.13.0"
dependencies = [
    "bs4",
    "fake_useragent",
    "pre-commit",
    "python-slugify",
    "pyvirtualdisplay",
    "requests",
    "selenium",
    "simple-term-menu",
    "structlog",
    "termcolor",
]

[tool.poetry]
package-mode = false

[tool.ruff]
line-length = 110
target-version = "py313"

[tool.ruff.lint]
ignore = [
    "D100", # Missing docstring in public module
    "D101", # Missing docstring in public class
    "D102", # Missing docstring in public method
    "D103", # Missing docstring in public function
    "D104", # Missing docstring in public package
    "D105", # Missing docstring in magic method
    "D106", # Missing docstring in public nested class
    "D107", # Missing docstring in __init__
    "D203", # 1 blank line required before class docstring
    "D212", # Multi-line docstring summary should start at the first line
]
select = [
    "A",    # flake8-builtins
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "D",    # pydocstyle
    "DTZ",  # flake8-datetimez
    "E",    # pycodestyle errors
    "EM",   # flake8-errmsg
    "ERA",  # eradicate
    "EXE",  # flake8-executable
    "F",    # pyflakes
    "FLY",  # flynt
    "G",    # flake8-logging-format
    "I",    # isort
    "ICN",  # flake8-import-conventions
    "ISC",  # flake8-implicit-str-concat
    "LOG",  # flake8-logging
    "PERF", # Perflint
    "PGH",  # pygrep-hooks
    "PIE",  # flake8-pie
    "PL",   # Pylint
    "PT",   # flake8-pytest-style
    "PTH",  # flake8-use-pathlib
    "Q",    # flake8-quotes
    "RET",  # flake8-return
    "RSE",  # flake8-raise
    "RUF",  # Ruff-specific rules
    "SIM",  # flake8-simplify
    "SLF",  # flake8-self
    "T10",  # flake8-debugger
    "T20",  # flake8-print
    "TCH",  # flake8-type-checking
    "TID",  # flake8-tidy-imports
    "TRY",  # tryceratops
    "UP",   # pyupgrade
    "W",    # pycodestyle warnings
]

[tool.ruff.lint.isort]
known-local-folder = ["comics_scraper", "tests"]

[tool.skjold]
report_only = true
sources = ["pypa"] # Sources to check against.
verbose = true
